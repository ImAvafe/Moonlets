name: Release

on: push

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  list-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.list-modules.outputs.modules }}

    steps:
      - name: Output all modules
        id: list-modules
        working-directory: modules
        run: |
          directories=($(ls -d */))
          directories=("${directories[@]%/}")
          json_array=()
          for dir in "${directories[@]}"; do
            if [[ ! " ${excluded_directories[@]} " =~ " $dir " ]]; then
              json_array+=("\"$dir\"")
            fi
          done
          json_elements=$(IFS=,; echo "${json_array[*]}")
          json_output="{ \"modules\": [$json_elements] }"
          echo "$json_output"

  changelog:
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      release-body: ${{ steps.update-changelog.outputs.release-notes }}
    strategy:
      matrix: ${{ fromJson(needs.list-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Update changelog for ${{ matrix.modules }}
        id: update-changelog
        uses: thomaseizinger/keep-a-changelog-new-release@3.1.0
        with:
          tag: ${{ github.ref_name }}
          changelogPath: "${{ matrix.modules }}docs/changelog.md" # Path adjusted for the module

      # - name: Commit and push for ${{ matrix.modules }}
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     message: Bump version to ${{ github.ref_name }}
      #     default_author: github_actions
      #     working-directory: ${{ matrix.modules }} # Run commit within the module's directory

  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Setup Pesde
        uses: 2jammers/setup-pesde@v0.3.0
        with:
          cache: true
          # token: "${{ secrets.PESDE_TOKEN }}"

      - name: Install dependencies
        run: pesde install

      - name: Format code with Stylua
        run: stylua modules/

      - name: Lint with Selene
        run: selene modules/

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [changelog, setup]
    strategy:
      matrix: ${{ fromJson(needs.list-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4

      - name: Standalone build for ${{ matrix.modules }}
        run: rojo build default.project.json --output ./Standalone.rbxm
        working-directory: ${{ matrix.modules }} # Build within the module's directory

      - name: Standalone release for ${{ matrix.modules }}
        uses: softprops/action-gh-release@v2.0.9
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          body: |
            ## Changelog
            ${{ needs.changelog.outputs.release-body }}
          files: |
            ${{ matrix.modules }}./Standalone.rbxm
        # working-directory: ${{ matrix.modules }} # Release within the module's directory

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [changelog, setup]
    strategy:
      matrix: ${{ fromJson(needs.list-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for ${{ matrix.modules }}
        run: pesde install
        working-directory: ${{ matrix.modules }} # Install within the module's directory
